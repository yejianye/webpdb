// Generated by CoffeeScript 1.4.0
var BaseObject, EventsDispatcher,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BaseObject = (function() {

  function BaseObject() {
    this.subscribe = __bind(this.subscribe, this);

    this.publish = __bind(this.publish, this);

  }

  BaseObject.prototype.publish = function(event, data) {
    return $(this).trigger(event, data);
  };

  BaseObject.prototype.subscribe = function(event, handler) {
    return $(this).bind(event, handler);
  };

  return BaseObject;

})();

EventsDispatcher = (function(_super) {

  __extends(EventsDispatcher, _super);

  function EventsDispatcher(url) {
    this.on_message = __bind(this.on_message, this);
    this.websocket = new WebSocket(url);
    this.websocket.onmessage = this.on_message;
  }

  EventsDispatcher.prototype.on_message = function(msg) {
    msg = JSON.parse(msg);
    console.log('on_message', msg);
    return $.publish(msg.event_name, msg.event_data);
  };

  return EventsDispatcher;

})(BaseObject);

$(function() {});
